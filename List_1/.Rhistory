fdr<-(fd+1)/nd
u1<-which(fdr<q)
if (length(u1)>0){
indopt<-max(u1)
th <- sorted$x[indopt]
}
else{
th <- max(w)+0.01
}
return(th)
}
th <- knockoff(W, q)
idxs <- which(W >= th)
length(idxs)
W >= th
th
X <- matrix(c(2.0, 0.0, 0.0,
1.0, 1.0, 2.0), byrow = TRUE, ncol = 3)
singular_vals <- svd(X)$d
max(singular_vals)
singular_vals
X <- matrix(c(0.0, -1.0, 1.0,
3.0, -1.0, 0.0), byrow = TRUE, ncol = 3)
singular_val <- svd(X)$d[1]
u <- svd(X)$u[,1]
v <- svd(X)$v[,1]
X_hat <- singular_val * (u %*% t(v))
sum((X-X_hat)^2)
X <- matrix(c(0.0, 0.0, -2.0,
2.0, 0.0, 2.0), byrow = TRUE, ncol = 3)
X.svd <- svd(X)
D <- matrix(0, nrow = 2, ncol = 3)
diag(D) <- X.svd$d
PCs <- X.svd$u %*% D
PCs[1,1]
n <- 3
p <- 3
k <- 1
X <- matrix(c(-5.0, -4.0, -7.0,
-7.0, -7.0, -8.0,
-7.0, -9.0, -11.0), ncol = 3, byrow = TRUE)
eigen_vals <- eigen(t(X)%*%X)$values
sigma2 <- 1/(n*(p-k))*sum(eigen_vals[(k+1):p])
sigma2
library(pesel)
X <- matrix(c(7,7,8,
21,16,21,
2,4,3), ncol = 3, byrow = TRUE)
pesel(X)$nPCs
cov_matrix <- matrix(c(-0.14444444444444451, 0.4666666666666668, -0.388888888888889,
0.2666666666666667, -0.4000000000000001, 0.3333333333333334,
-0.31111111111111117, 0.4666666666666668, -0.22222222222222232), ncol = 3, byrow = TRUE)
solve(cov_matrix)
grades <- c(3.5, 4.5, 4.5, 4.5, 5, 5, 5, 4.5, 5, 4, 4)
mean(grades)
install.packages("Splinets")
library(Splinets)
n <- 17
k <- 4
set.seed(5)
xi <- c(0, sort(runif(n)), 1)
S <- matrix(rnorm((n+2)*(k+1)), ncol=k+1)
spl <- construct(xi, k, S)
is.splinets(spl)
is.splinets(spl)[[1]]
is.splinets(spl)
spl <- construct(xi, k, S, mthd="CRFC")
is.splinets(spl)
spl <- construct(xi, k, S, mthd="CRLC")
is.splinets(spl)
source('~/.active-rstudio-document')
n <- 20
xi <- c(0, sort(runif(n)), 1)
spl <- construct(xi, k, S)
is.splinets(spl)
spl
spl.data
spl$data
supp <- c(3, 17)
SS <- matrix(rnorm((supp[2]-supp[1]+1)*(k+1)), ncol=k+1)
sspl <- construct(xi, k, SS, supp=supp)
is.splinets(sspl)
sspl@knots
sspl@supp
sspl@der
library(Splinets)
n <- 13
k <- 4
set.seed(5)
xi <- c(0, sort(runif(n)), 1)
S1 <- matrix(rnorm((n+2)*(k+1)), ncol=k+1)
S2 <- matrix(rnorm((n+2)*(k+1)), ncol=k+1)
S3 <- matrix(rnorm((n+2)*(k+1)), ncol=k+1)
spl1 <- construct(xi, k, S1)
spl2 <- construct(xi, k, S1)
spl3 <- construct(xi, k, S3)
spl <- gather(spl1, spl2)
spl <- gather(spl, spl3)
dspl <- deriva(spl)
plot(spl)
plot(dspl)
spl1 <- construct(xi, k, S1)
spl2 <- construct(xi, k, S2)
spl3 <- construct(xi, k, S3)
spl <- gather(spl1, spl2)
spl <- gather(spl, spl3)
dspl <- deriva(spl)
plot(spl)
plot(dspl)
library(Splinets)
n <- 25
k <- 3
set.seed(5)
xi <- seq(0, 1, by=1/(n+1))
supp <- matrix(c(2, 12, 3, 20, 6, 25), byrow=TRUE, ncol=2)
S1 <- matrix(rnorm((n+2)*(k+1)), ncol=k+1)
S2 <- matrix(rnorm((n+2)*(k+1)), ncol=k+1)
S3 <- matrix(rnorm((n+2)*(k+1)), ncol=k+1)
spl1 <- construct(xi, k, S1[1, ])
spl2 <- construct(xi, k, S2[2, ])
spl3 <- construct(xi, k, S3[3, ])
spl <- gather(spl1, spl2)
spl <- gather(spl, spl3)
dspl <- deriva(spl)
oldpar <- par(no.readonly = TRUE)
par(mar=c(1,1,1,1))
par(mfrow=c(2,1))
plot(dspl)
plot(spl)
par(mfrow=c(1,1))
par(oldpar)
library(Splinets)
n <- 25
k <- 3
set.seed(5)
xi <- seq(0, 1, by=1/(n+1))
supp <- matrix(c(2, 12, 3, 20, 6, 25), byrow=TRUE, ncol=2)
S1 <- matrix(rnorm((supp[1,2]-supp[1,1]+1)*(k+1)), ncol=k+1)
S2 <- matrix(rnorm((supp[2,2]-supp[2,1]+1)*(k+1)), ncol=k+1)
S3 <- matrix(rnorm((supp[3,2]-supp[3,1]+1)*(k+1)), ncol=k+1)
spl1 <- construct(xi, k, S1, supp[1, ])
spl2 <- construct(xi, k, S2, supp[2, ])
spl3 <- construct(xi, k, S3, supp[3, ])
spl <- gather(spl1, spl2)
spl <- gather(spl, spl3)
dspl <- deriva(spl)
oldpar <- par(no.readonly = TRUE)
par(mar=c(1,1,1,1))
par(mfrow=c(2,1))
plot(dspl)
plot(spl)
par(mfrow=c(1,1))
par(oldpar)
dspl <- deriva(spl)
oldpar <- par(no.readonly = TRUE)
plot(dspl)
plot(spl)
library(Splinets)
n <- 23
k <- 4
set.seed(5)
xi <- c(0, sort(runif(n)), 1)
# xi <- seq(0, 1, by=1/(n+1))
# supp <- matrix(c(2, 12, 3, 20, 6, 25), byrow=TRUE, ncol=2)
# S1 <- matrix(rnorm((supp[1,2]-supp[1,1]+1)*(k+1)), ncol=k+1)
# S2 <- matrix(rnorm((supp[2,2]-supp[2,1]+1)*(k+1)), ncol=k+1)
# S3 <- matrix(rnorm((supp[3,2]-supp[3,1]+1)*(k+1)), ncol=k+1)
S <- matrix(rnorm((n+2)*(k+1)), ncol=k+1)
spl1 <- construct(xi, k, S)
spl2 <- construct(xi, k, S, mthd="CRFC")
spl3 <- construct(xi, k, S, mthd="CRLC")
spl <- gather(spl1, spl2)
spl <- gather(spl, spl3)
plot(spl)
dintegra(spl, sID=c(1,3))
dintegra(spl)
plot(spl, sID=c(1,3))
plot(spl)
library(Splinets)
n <- 20
k <- 3
xi <- sort(runif(n+2))
sp <- new("Splinets", knots=xi)
S <- matrix(rnorm((n+2)*(k+1)), ncol=k+1)
library(Splinets)
n <- 20
k <- 3
xi <- sort(runif(n+2))
sp <- new("Splinets", knots=xi)
S <- matrix(rnorm((n+2)*(k+1)), ncol=k+1)
sp@supp <- list(t(c(1, n+2)))
sp@smorder <- k
sp@der[[1]] <- S
y <- evspline(sp)
plot(y, type='l', col='red')
nsp <- is.splinets(sp)
sp2 <- nsp$robject
y <- evspline(sp2)
lines(y, type='l')
nsp
n <- 17
k <- 4
xi <- c(0, sort(runif(n)), 1)
S <- matrix(rnorm((n+2)*(k+1)), ncol=k+1)
spl1 <- construct(xi, k, S)
spl2 <- construct(xi, k, S, mthd="CRFC")
spl3 <- construct(xi, k, S, mthd="CRLC")
spl <- gather(spl1, spl2)
spl <- gather(spl, spl3)
y <- evspline(sp, sID=1)
plot(y, type='l', col='red')
n <- 17
k <- 4
xi <- c(0, sort(runif(n)), 1)
S <- matrix(rnorm((n+2)*(k+1)), ncol=k+1)
spl1 <- construct(xi, k, S)
spl2 <- construct(xi, k, S, mthd="CRFC")
spl3 <- construct(xi, k, S, mthd="CRLC")
spl <- gather(spl1, spl2)
spl <- gather(spl, spl3)
y <- evspline(spl, sID=1)
plot(y, type='l', col='red')
y <- evspline(spl, sID=c(1,3))
plot(y[, 1:2], type='l', col='red')
points(y[, c(1, 3)], type='l', col='blue')
y <- evspline(spl)
plot(y[, 1:2], type='l', col='red', ylim=range(y[2:4]))
points(y[, c(1, 3)], type='l', col='blue')
points(y[, c(1, 4)], type='l', col='green')
y <- evspline(spl)
plot(y[, 1:2], type='l', col='red', ylim=range(y[,2:4]))
points(y[, c(1, 3)], type='l', col='blue')
points(y[, c(1, 4)], type='l', col='green')
setwd('~/WdIF/List_1/')
set.seed(42, kind="Mersenne-Twister")
the_matrix <- matrix(rnorm(500*252, 0.2, 0.3),
nrow = 500,
ncol = 252)
the_sums <- apply(the_matrix, 2, cumsum)
matplot(the_sums)
the_matrix <- matrix(rnorm(500*252, 0, 0.3),
nrow = 500,
ncol = 252)
the_sums <- apply(the_matrix, 2, cumsum)
matplot(the_sums)
set.seed(42, kind="Mersenne-Twister")
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
X <- sample(-1000:1000, 2001)
new_X <- X[X >= cumsum(X)]
new_X_2 <- X[X >= cummax(X)]
new_X
new_X_2
plot(1:2001, X, ylim=c(min(cumsum(X)), max(cumsum(X))), type='l')
lines(1:2001, cumsum(X), col='blue')
lines(1:2001, cummax(X), col='red')
1000 * 5 * exp(-1/2)
temp_sum <- c()
for(i in 1:10000){
v1 <- rexp(1000, 1/5)
v2 <- runif(1000, 0, 20)
temp_sum[i] <- sum(dis(v1, v2))
}
mean(temp_sum)
sd(temp_sum)
1000 * 5 * exp(-1/2)
dis <- function(c, t){c * exp(-0.05*t)}
temp_sum <- c()
for(i in 1:10000){
v1 <- rexp(1000, 1/5)
v2 <- runif(1000, 0, 20)
temp_sum[i] <- sum(dis(v1, v2))
}
mean(temp_sum)
sd(temp_sum)
1000 * 5 * exp(-1/2)
temp_sum <- c()
for(i in 1:10000){
v1 <- rexp(1000, 1/5)
v2 <- runif(1000, 0, 20)
temp_sum[i] <- sum(dis(v1, v2))
}
mean(temp_sum)
sd(temp_sum)
1000 * 5 * exp(-1/2)
temp_sum <- c()
for(i in 1:10000){
v1 <- rexp(1000, 1/5)
v2 <- runif(1000, 0, 20)
temp_sum[i] <- sum(dis(v1, v2))
}
mean(temp_sum)
sd(temp_sum)
1000 * 5 * exp(-1/2)
temp_sum <- c()
for(i in 1:10000){
v1 <- rexp(1000, 1/5)
v2 <- runif(1000, 0, 20)
temp_sum[i] <- sum(dis(v1, v2))
}
mean(temp_sum)
sd(temp_sum)
1000 * 5 * exp(-1/2)
temp_sum <- c()
for(i in 1:10000){
v1 <- rexp(1000, 1/5)
v2 <- runif(1000, 0, 20)
temp_sum[i] <- sum(dis(v1, v2))
}
mean(temp_sum)
sd(temp_sum)
1000 * 5 * exp(-1/2)
temp_sum <- c()
for(i in 1:10000){
v1 <- rexp(1000, 1/5)
v2 <- runif(1000, 0, 20)
temp_sum[i] <- sum(dis(v1, v2))
}
mean(temp_sum)
sd(temp_sum)
1000 * 5 * exp(-1/2)
temp_sum <- c()
for(i in 1:10000){
v1 <- rexp(1000, 1/5)
v2 <- runif(1000, 0, 20)
temp_sum[i] <- sum(dis(v1, v2))
}
mean(temp_sum)
sd(temp_sum)
1000 * 5 * exp(-1/2)
temp_sum <- c()
for(i in 1:10000){
v1 <- rexp(1000, 1/5)
v2 <- runif(1000, 0, 20)
temp_sum[i] <- sum(dis(v1, v2))
}
mean(temp_sum)
sd(temp_sum)
1000 * 5 * exp(-1/2)
set.seed(42, kind="Mersenne-Twister")
the_matrix <- matrix(rnorm(500*252, 0.2, 0.3),
nrow = 500,
ncol = 252)
the_sums <- apply(the_matrix, 2, cumsum)
matplot(the_sums)
the_matrix <- matrix(rnorm(500*252, 0, 0.3),
nrow = 500,
ncol = 252)
the_sums <- apply(the_matrix, 2, cumsum)
matplot(the_sums)
1000 * 5 * (1-exp(-1))
set.seed(42, kind="Mersenne-Twister")
dis <- function(c, t){c * exp(-0.05*t)}
v1 <- rexp(1000, 1/5)
v2 <- runif(1000, 0, 20)
plot(v1, v2)
sum(dis(v1, v2))
1000 * 5 * exp(-1/2)
temp_sum <- c()
for(i in 1:10000){
v1 <- rexp(1000, 1/5)
v2 <- runif(1000, 0, 20)
temp_sum[i] <- sum(dis(v1, v2))
}
mean(temp_sum)
sd(temp_sum)
1000 * 5 * (1-exp(-1))
set.seed(42, kind="Mersenne-Twister")
the_matrix <- matrix(rnorm(500*252, 0.2, 0.3),
nrow = 500,
ncol = 252)
the_sums <- apply(the_matrix, 2, cumsum)
matplot(the_sums)
set.seed(42, kind="Mersenne-Twister")
the_matrix <- matrix(rnorm(500*252, 0.2, 0.3),
nrow = 500,
ncol = 252)
the_sums <- apply(the_matrix, 1, cumsum)
matplot(the_sums)
matplot(the_sums, type='l')
the_matrix <- matrix(rnorm(500*252, 0, 0.3),
nrow = 500,
ncol = 252)
the_sums <- apply(the_matrix, 1, cumsum)
matplot(the_sums, type='l')
the_matrix <- matrix(rnorm(500*252, 0, 2),
nrow = 500,
ncol = 252)
the_sums <- apply(the_matrix, 1, cumsum)
matplot(the_sums, type='l')
the_matrix <- matrix(rnorm(500*252, -1, 2),
nrow = 500,
ncol = 252)
the_sums <- apply(the_matrix, 1, cumsum)
matplot(the_sums, type='l')
the_matrix <- matrix(rnorm(500*252, -1, 0.1),
nrow = 500,
ncol = 252)
the_sums <- apply(the_matrix, 1, cumsum)
matplot(the_sums, type='l')
the_matrix <- matrix(rnorm(500*252, -1, 10),
nrow = 500,
ncol = 252)
the_sums <- apply(the_matrix, 1, cumsum)
matplot(the_sums, type='l')
the_matrix <- matrix(rnorm(500*252, -1, 1),
nrow = 500,
ncol = 252)
the_sums <- apply(the_matrix, 1, cumsum)
matplot(the_sums, type='l')
